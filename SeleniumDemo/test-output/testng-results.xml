<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="5" passed="3" failed="1" skipped="1">
  <reporter-output>
  </reporter-output>
  <suite started-at="2022-08-24T12:11:36 IST" name="practise suite" finished-at="2022-08-24T12:12:10 IST" duration-ms="34081">
    <groups>
    </groups>
    <test started-at="2022-08-24T12:11:36 IST" name="hello" finished-at="2022-08-24T12:12:10 IST" duration-ms="34081">
      <class name="TestNGDemo.FlowExection">
        <test-method is-config="true" signature="filehandle()[pri:0, instance:TestNGDemo.FlowExection@6bd61f98]" started-at="2022-08-24T12:11:36 IST" name="filehandle" finished-at="2022-08-24T12:11:36 IST" duration-ms="25" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- filehandle -->
        <test-method is-config="true" signature="browser()[pri:0, instance:TestNGDemo.FlowExection@6bd61f98]" started-at="2022-08-24T12:11:36 IST" name="browser" finished-at="2022-08-24T12:11:50 IST" duration-ms="14052" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- browser -->
        <test-method signature="test1(java.lang.String,java.lang.String)[pri:0, instance:TestNGDemo.FlowExection@6bd61f98]" started-at="2022-08-24T12:11:50 IST" name="test1" data-provider="Authentication" finished-at="2022-08-24T12:11:54 IST" duration-ms="3931" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Admin]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[admin123]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1 -->
        <test-method is-config="true" signature="teardown()[pri:0, instance:TestNGDemo.FlowExection@6bd61f98]" started-at="2022-08-24T12:11:54 IST" name="teardown" finished-at="2022-08-24T12:11:55 IST" duration-ms="907" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
        <test-method is-config="true" signature="browser()[pri:0, instance:TestNGDemo.FlowExection@6bd61f98]" started-at="2022-08-24T12:11:55 IST" name="browser" finished-at="2022-08-24T12:12:07 IST" duration-ms="11427" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- browser -->
        <test-method signature="test1(java.lang.String,java.lang.String)[pri:0, instance:TestNGDemo.FlowExection@6bd61f98]" started-at="2022-08-24T12:12:07 IST" name="test1" data-provider="Authentication" finished-at="2022-08-24T12:12:10 IST" duration-ms="3030" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1 -->
        <test-method is-config="true" signature="teardown()[pri:0, instance:TestNGDemo.FlowExection@6bd61f98]" started-at="2022-08-24T12:12:10 IST" name="teardown" finished-at="2022-08-24T12:12:10 IST" duration-ms="577" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
        <test-method is-config="true" signature="close()[pri:0, instance:TestNGDemo.FlowExection@6bd61f98]" started-at="2022-08-24T12:12:10 IST" name="close" finished-at="2022-08-24T12:12:10 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- close -->
      </class> <!-- TestNGDemo.FlowExection -->
      <class name="TestNGDemo.dependsonMethod">
        <test-method signature="login()[pri:0, instance:TestNGDemo.dependsonMethod@306e95ec]" started-at="2022-08-24T12:11:36 IST" name="login" finished-at="2022-08-24T12:11:36 IST" duration-ms="17" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [nn] but found [name]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [nn] but found [name]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertEqualsImpl(Assert.java:140)
at org.testng.Assert.assertEquals(Assert.java:122)
at org.testng.Assert.assertEquals(Assert.java:629)
at org.testng.Assert.assertEquals(Assert.java:639)
at TestNGDemo.dependsonMethod.login(dependsonMethod.java:18)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- login -->
        <test-method signature="logout()[pri:0, instance:TestNGDemo.dependsonMethod@306e95ec]" started-at="2022-08-24T12:11:36 IST" name="logout" finished-at="2022-08-24T12:11:36 IST" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- logout -->
        <test-method signature="application()[pri:0, instance:TestNGDemo.dependsonMethod@306e95ec]" started-at="2022-08-24T12:11:36 IST" name="application" finished-at="2022-08-24T12:11:36 IST" depends-on-methods="TestNGDemo.dependsonMethod.login" duration-ms="0" status="SKIP">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method dependsonMethod.application()[pri:0, instance:TestNGDemo.dependsonMethod@306e95ec] depends on not successfully finished methods]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method dependsonMethod.application()[pri:0, instance:TestNGDemo.dependsonMethod@306e95ec] depends on not successfully finished methods
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:102)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- application -->
      </class> <!-- TestNGDemo.dependsonMethod -->
    </test> <!-- hello -->
  </suite> <!-- practise suite -->
</testng-results>
